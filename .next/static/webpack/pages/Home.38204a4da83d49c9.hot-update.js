"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Home",{

/***/ "./pages/AppContext.jsx":
/*!******************************!*\
  !*** ./pages/AppContext.jsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AppContextProvider\": function() { return /* binding */ AppContextProvider; },\n/* harmony export */   \"useAppContext\": function() { return /* binding */ useAppContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useAppContext = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (context === undefined) {\n        throw new Error(\"useAppContext must be used within a AppProvider\");\n    }\n    return context;\n};\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst initialForm = {\n    model: \"text-davinci-003\",\n    size: \"256x256\",\n    n: 1,\n    temperature: 1,\n    topP: 1,\n    frequencyPenalty: 0,\n    presencePenalty: 0,\n    bestOf: 1,\n    text: \"\",\n    topText: \"\"\n};\nconst useDebug = (form, chatLog)=>{\n    _s1();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) console.log(\"form\", form);\n    }, [\n        form\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) console.log(\"chatLog\", chatLog);\n    }, [\n        chatLog\n    ]);\n};\n_s1(useDebug, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n/*\n * This is a wrapper component that provides context to all the components.\n * This includes user, form, and chatLog.\n */ const AppContextProvider = (param)=>{\n    let { children  } = param;\n    _s2();\n    const [chatLog, setChatLog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [allowEnterToSubmit, setAllowEnterToSubmit] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isSending, setIsSending] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [form, setForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialForm);\n    const [openSidebar, setOpenSidebar] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    useDebug(form, chatLog);\n    const handleChange = (event)=>{\n        event.preventDefault();\n        const { name , value  } = event.target;\n        if (value[value.length - 1] === \"Enter\" && allowEnterToSubmit) {\n            return handleSubmit(event);\n        }\n        setForm({\n            ...form,\n            [name]: value\n        });\n    };\n    const toggleCheck = (user, index)=>{\n        setChatLog((prev)=>{\n            let copy = [\n                ...prev\n            ];\n            const updatedCheck = !copy[index].selected;\n            copy[index].selected = updatedCheck;\n            // this part of the code is to make sure both the prompt and the answer to the prompt are being submitted to openai\n            const isUser = user === \"User\" ? 1 : -1;\n            copy[index + isUser].selected = updatedCheck;\n            return copy;\n        });\n    };\n    const submitImage = ()=>{\n        const payload = {\n            prompt: form.text,\n            n: form.number,\n            size: form.size\n        };\n        axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/api/image\", {\n            payload\n        }).then((response)=>{\n            setChatLog((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        user: \"OpenAI\",\n                        timestamp: Date.now(),\n                        selected: true,\n                        imageUrl: response.data.image\n                    }\n                ];\n            });\n        }).catch((error)=>console.error(error)).then(()=>{\n            setIsSending(false);\n            setChatLog((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        user: \"OpenAI\",\n                        timestamp: Date.now(),\n                        text: \"Could not send message.\",\n                        selected: true,\n                        error: true\n                    }\n                ];\n            });\n        });\n    };\n    // don't forget to handle edge cases such as empty text field\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (isSending) return console.log(\"already sending\");\n        if (!form.text.length || !form.text.trim().length) return Swal.fire({\n            icon: \"error\",\n            title: \"Error\",\n            text: \"Please enter a valid message\"\n        });\n        setIsSending(true);\n        // parse the prompt into a Q/A pair\n        const selectedMessages = chatLog.filter((message)=>message.selected).map((message)=>`${message.user === \"User\" ? \"Q:\" : \"A:\"}: ${message.text}${message.user === \"User\" ? \"\" : \"\\n\"}`).join(\"\\n\");\n        const prompt = form.topText + \"\\n\" + selectedMessages + \"\\n\" + form.text + \"\\nA:\";\n        const max = form.model === \"text-davinci-003\" ? 3500 : 1500;\n        const max_tokens = parseInt(max - prompt.length / 4);\n        if (max_tokens <= 0) {\n            return Swal.fire({\n                icon: \"error\",\n                title: \"Prompt is too long\",\n                text: \"Please remove some of the selected messages\"\n            });\n        }\n        // setIsSending(false);\n        console.log({\n            prompt,\n            max_tokens\n        });\n        // create payload\n        // prompt should be: pinned + selected previous messages + current text\n        const payload = {\n            model: form.model,\n            temperature: form.temperature,\n            top_p: form.topP,\n            frequency_penalty: form.frequencyPenalty,\n            presence_penalty: form.presencePenalty,\n            best_of: form.bestOf,\n            prompt,\n            max_tokens\n        };\n        // add new message to chat log and clear form\n        // add message to chatLog array\n        setChatLog((prev)=>{\n            return [\n                ...prev,\n                {\n                    user: \"User\",\n                    timestamp: Date.now(),\n                    text: form.text,\n                    selected: true\n                }\n            ];\n        });\n        setForm((prev)=>{\n            return {\n                ...prev,\n                text: \"\"\n            };\n        });\n        if (form.model === \"image-dalle-002\") return submitImage();\n        axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/api/chat\", {\n            payload\n        }).then((response)=>{\n            console.log(response.data);\n            setChatLog((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        user: \"OpenAI\",\n                        timestamp: Date.now(),\n                        text: response.data.text,\n                        selected: true\n                    }\n                ];\n            });\n        }).catch((error)=>{\n            setChatLog((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        user: \"OpenAI\",\n                        timestamp: Date.now(),\n                        text: \"Could not send message.\",\n                        selected: true,\n                        error: true\n                    }\n                ];\n            });\n            console.error(error);\n        }).then(()=>{\n            setIsSending(false);\n        // {!} add scroll to bottom of chatlog later after refactoring\n        });\n    };\n    const value = {\n        openSidebar,\n        setOpenSidebar,\n        chatLog,\n        setChatLog,\n        allowEnterToSubmit,\n        setAllowEnterToSubmit,\n        isSending,\n        setIsSending,\n        form,\n        setForm,\n        handleChange,\n        toggleCheck,\n        handleSubmit\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/vincent/Development/Grind/chatgpt2.0/pages/AppContext.jsx\",\n        lineNumber: 242,\n        columnNumber: 10\n    }, undefined);\n};\n_s2(AppContextProvider, \"j07FN2IL1ad+D6HEhjokDKJbGS8=\", false, function() {\n    return [\n        useDebug\n    ];\n});\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/AppContext.jsx\n"));

/***/ })

});